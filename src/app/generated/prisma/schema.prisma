// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS
enum Role {
  USER
  ADMIN
}

enum Plan {
  FREE
  PRO
}

enum SourceType {
  USER
  AI_SCRAPE
  ADMIN
}

model User {
  id          String     @id @default(cuid())
  email       String     @unique
  name        String?
  username    String?    @unique
  avatarUrl   String?
  role        Role       @default(USER)
  plan        Plan       @default(FREE)
  stripeId    String?    @unique
  inventory   Inventory?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  inventoryId String
}

model Inventory {
  id     String            @id @default(cuid())
  userId String            @unique
  items  ItemOnInventory[]
  user   User              @relation(fields: [userId], references: [id])
}

model Item {
  id              String            @id @default(cuid())
  name            String
  description     String?
  imageUrl        String?
  url             String? // affiliate ready
  sourceType      SourceType // USER, AI_SCRAPE, ADMIN
  tags            ItemTag[]
  createdAt       DateTime          @default(now())
  ItemOnInventory ItemOnInventory[]
}

model ItemOnInventory {
  id          String    @id @default(cuid())
  item        Item      @relation(fields: [itemId], references: [id])
  itemId      String
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId String
  customName  String? // userâ€™s rename
  customDesc  String?
  customUrl   String?
}

model Tag {
  id      Int       @id @default(autoincrement())
  label   String    @unique
  ItemTag ItemTag[]
}

model ItemTag {
  itemId String
  tagId  Int
  item   Item   @relation(fields: [itemId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([itemId, tagId])
}
